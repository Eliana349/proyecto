# Generated by Django 4.2.4 on 2023-09-05 19:07

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Campus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('headquarters_name', models.CharField(max_length=100, verbose_name='Nombre sede')),
                ('address', models.CharField(max_length=100, verbose_name='Dirección')),
            ],
            options={
                'verbose_name': 'Sede',
                'verbose_name_plural': 'Sedes',
                'db_table': 'sede',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='Catering',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('household', models.CharField(max_length=100, verbose_name='Menaje')),
            ],
            options={
                'verbose_name': 'Catering',
                'verbose_name_plural': 'Catering',
                'db_table': 'catering',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='Drink',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('schnapps', models.CharField(max_length=100, verbose_name='Aguardiente')),
            ],
            options={
                'verbose_name': 'Bebida',
                'verbose_name_plural': 'Bebidas',
                'db_table': 'bebida',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='Equipment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('lightning', models.CharField(max_length=100, verbose_name='iluminacion y sonido')),
            ],
            options={
                'verbose_name': 'Equipo',
                'verbose_name_plural': 'Equipos',
                'db_table': 'equipos',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(verbose_name='Fecha')),
                ('hour', models.TimeField(verbose_name='Hora')),
                ('event_type', models.CharField(max_length=100, verbose_name='Tipo de evento')),
                ('theme', models.CharField(max_length=200, verbose_name='Tematica')),
                ('description', models.CharField(max_length=500, verbose_name='Descripcion')),
                ('number_of_invites', models.PositiveIntegerField(verbose_name='Numero de invitados')),
                ('special_need', models.CharField(max_length=200, verbose_name='Nesecidad especial')),
                ('guest_document', models.CharField(max_length=200, verbose_name='Documento invitado')),
                ('campus', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.campus')),
            ],
            options={
                'verbose_name': 'Evento',
                'verbose_name_plural': 'Eventos',
                'db_table': 'evento',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='EventType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('wedding', models.CharField(max_length=100, verbose_name='Boda')),
                ('birthday', models.CharField(max_length=100, verbose_name='Cumpleaños')),
                ('anniversary', models.CharField(max_length=100, verbose_name='Aniversario')),
                ('baby_shower', models.CharField(max_length=100, verbose_name='Baby shower')),
                ('conferences', models.CharField(max_length=100, verbose_name='Conferencias')),
                ('theme_parties', models.CharField(max_length=100, verbose_name='Fisestas tematicas')),
            ],
            options={
                'verbose_name': 'Tipo evento',
                'verbose_name_plural': 'Tipos de evento',
                'db_table': 'tipoevento',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='Inventory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('availability', models.CharField(max_length=100, verbose_name='Disponibilidad')),
                ('worth', models.PositiveIntegerField(verbose_name='Valor')),
                ('description', models.CharField(max_length=500, verbose_name='Descripcion')),
                ('name', models.CharField(max_length=100, verbose_name='Nombre')),
            ],
            options={
                'verbose_name': 'Inventario',
                'verbose_name_plural': 'Inventarios',
                'db_table': 'inventario',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='loyalty',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reward', models.CharField(max_length=100, verbose_name='Recompensa')),
                ('ovservations', models.CharField(max_length=100, verbose_name=' Observación ')),
                ('type_pqrsd', models.CharField(max_length=100, verbose_name=' Tipo pqrsd')),
                ('dare_pqrsd', models.DateField(null=True, verbose_name='Fecha')),
                ('reward_date', models.DateField(null=True, verbose_name='Fecha recompemsa ')),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.event')),
            ],
            options={
                'verbose_name': 'Fidelizacion',
                'verbose_name_plural': ' Fidelizaciones ',
                'db_table': 'fidelizacion',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='TypePay',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nequi', models.CharField(max_length=100)),
                ('daviplata', models.CharField(max_length=100)),
                ('bamcolombia', models.CharField(max_length=100)),
                ('efectivo', models.CharField(max_length=100)),
                ('tarjeta', models.CharField(max_length=100)),
            ],
            options={
                'verbose_name': 'Tipo de pago  ',
                'verbose_name_plural': 'Tipos de pago ',
                'db_table': 'tipopago',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='TypePqrsd',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('partitions', models.CharField(max_length=100, verbose_name='Peticiones')),
                ('complaints', models.CharField(max_length=100, verbose_name='Quejas')),
                ('claims', models.CharField(max_length=100, verbose_name='Reclamos')),
                ('suggestions', models.CharField(max_length=100, verbose_name='Sugerencias')),
                ('denunciation', models.CharField(max_length=100, verbose_name='Denuncia')),
                ('loyalty', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.loyalty')),
            ],
            options={
                'verbose_name': 'Tipo pqrsd',
                'verbose_name_plural': 'Tipos pqrsd',
                'db_table': 'tipo pqrsd',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='Supplier',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nit', models.PositiveIntegerField(verbose_name='NIT')),
                ('company_name', models.CharField(max_length=100, verbose_name='Nombre empresa')),
                ('inventory', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.inventory')),
            ],
            options={
                'verbose_name': 'Proveedor',
                'verbose_name_plural': 'Proveedores',
                'db_table': 'proveedor',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='StateProduct',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('asset', models.CharField(max_length=100, verbose_name='Activo ')),
                ('idle', models.CharField(max_length=100, verbose_name='Inactivo ')),
                ('amount', models.PositiveIntegerField(verbose_name='Cantidad')),
                ('description', models.CharField(max_length=500, verbose_name='Descripcion')),
                ('inventory', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.inventory')),
            ],
            options={
                'verbose_name': 'Estado de producto ',
                'verbose_name_plural': 'Estados de producto ',
                'db_table': 'estadoproducto',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='StatePqrsd',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('wait', models.CharField(max_length=100, verbose_name=' Espera')),
                ('reviewed', models.CharField(max_length=100, verbose_name=' Revisado')),
                ('answered', models.CharField(max_length=100, verbose_name=' Contestado')),
                ('loyalty', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.loyalty')),
            ],
            options={
                'verbose_name': 'Estado pqrsd',
                'verbose_name_plural': ' Estados pqrsd ',
                'db_table': 'estado pqrsd',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='Rent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rental_date_and_time', models.DateTimeField(verbose_name='Fecha y hora de alquiler')),
                ('return_date_and_time', models.DateTimeField(verbose_name='Fecha y hora de devolución')),
                ('description', models.TextField(verbose_name='Descripcion')),
                ('unit_price', models.PositiveIntegerField(verbose_name='Precio Unitario')),
                ('total_price', models.PositiveIntegerField(verbose_name='Precio total')),
                ('catering', models.ManyToManyField(to='core.catering')),
                ('drink', models.ManyToManyField(to='core.drink')),
                ('equipment', models.ManyToManyField(to='core.equipment')),
            ],
            options={
                'verbose_name': 'Alquiler',
                'verbose_name_plural': 'Alquileres',
                'db_table': 'alquiler',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='ProductType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('catering', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='core.catering')),
                ('drink', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='core.drink')),
                ('equipment', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='core.equipment')),
            ],
            options={
                'verbose_name': 'Tipo Producto',
                'verbose_name_plural': 'Tipos de Productos',
                'db_table': 'productotipo',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='Pay',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subscription_number', models.PositiveIntegerField(verbose_name='Numero de abono')),
                ('voucher', models.CharField(max_length=500, verbose_name='Comprobante')),
                ('payment_method', models.CharField(max_length=100, verbose_name='Metodo de pago')),
                ('full_payment', models.PositiveIntegerField(verbose_name='Pago total')),
                ('rent', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.rent')),
            ],
            options={
                'verbose_name': 'Pago',
                'verbose_name_plural': 'Pagos',
                'db_table': 'pago',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='Lounge',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('availability', models.CharField(max_length=100, verbose_name='Disponibilidad')),
                ('capacity', models.PositiveIntegerField(verbose_name='Capacidad aforo')),
                ('campus', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.campus')),
            ],
            options={
                'verbose_name': 'Salon',
                'verbose_name_plural': 'Salones',
                'db_table': 'salon',
                'ordering': ['id'],
            },
        ),
        migrations.AddField(
            model_name='inventory',
            name='productType',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.producttype'),
        ),
        migrations.AddField(
            model_name='event',
            name='eventType',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.eventtype'),
        ),
        migrations.AddField(
            model_name='event',
            name='lounge',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.lounge'),
        ),
        migrations.AddField(
            model_name='event',
            name='pay',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.pay'),
        ),
    ]
